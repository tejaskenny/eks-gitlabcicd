apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Chart.Name }}-mysql
  namespace: {{ .Release.Namespace }}
spec:
  serviceName: {{ .Chart.Name }}-mysql-headless
  replicas: {{ .Values.mysql.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}-mysql
      env: {{ .Values.global.env | quote }}
  template:
    metadata:
      labels:
        env: {{ .Values.global.env | quote }}
        app: {{ .Chart.Name}}-mysql
    spec:
      containers:
      - name: mysql
        image: "{{ .Values.mysql.image.repository}}:{{ .Values.mysql.image.tag}}"
        ports:
        - containerPort: {{ .Values.mysql.service.targetPort }}
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: {{ .Values.mysql.rootPasswd | quote }}
        - name: MYSQL_DATABASE
          value: {{ .Values.mysql.database | quote }}
        resources:
          limits:
            memory:  {{ .Values.mysql.resources.limits.memory | quote }}
            cpu:  {{ .Values.mysql.resources.limits.cpu | quote }}
        livenessProbe:
          tcpSocket:
            port: {{ .Values.mysql.service.targetPort }}
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          tcpSocket:
            port: {{ .Values.mysql.service.targetPort }}
          initialDelaySeconds: 10
          periodSeconds: 10
        volumeMounts:
        - name: mysql-empty
          mountPath: /var/lib/mysql
        - name: init-script-volume
          mountPath: /docker-entrypoint-initdb.d/init.sql
          subPath: init.sql
      volumes:
      - name: mysql-empty
        emptyDir: {}
#      - name: mysql-pvc
#        persistentVolumeClaim: 
#          claimName: {{ .Chart.Name }}-pvc
      - name: init-script-volume
        configMap:
          name: {{ .Values.mysql.initScriptConfigMap }}
